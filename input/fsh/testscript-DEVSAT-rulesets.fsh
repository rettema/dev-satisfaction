RuleSet: DEVSAT-profile-dynamic-read-validate-test(resource, instance_name, date, return_type, profile_id, profile_url, profile_description)
* insert TSMetadata({instance_name}, http://hl7.org/fhir/uv/dev-satisfaction, {date}, "HL7 FHIR R4 TestScript Read Validate {profile_description} {return_type}", "Example TestScript to test {profile_description} resource read and profile validation using {return_type} format")
* insert TSOrigin(1)
* insert TSDestination(1)
* insert TSProfile({profile_id}, {profile_url})
* insert TSVariableDynamic("resource_id", "example", "[resource.id]", "Enter a known resource id on the destination system.")
* insert TSTest(PatientReadValidate, "Test {profile_description} resource read on destination server and assert returned resource passes validation")
* insert TSTestOperationResource(#read, #{resource}, {return_type}, 1, 1, "ResourceRead", "/${resource_id}")
* insert TSTestAssertWithProp("Confirm that the returned response code is 200 OK.", false, #response, responseCode, "200")
* insert TSTestAssertWithProp("Confirm that the returned response payload is the specified resource.", false, #response, resource, #{resource})
* insert TSTestAssertWithProp("Confirm that the returned resource conforms to the specified profile.", false, #response, validateProfileId, "{profile_id}")

RuleSet: DEVSAT-profile-read-validate-test(resource, resource_id, instance_name, date, return_type, profile_id, profile_url, profile_description)
* insert TSMetadata({instance_name}, http://hl7.org/fhir/uv/dev-satisfaction, {date}, "HL7 FHIR R4 TestScript Read Validate {profile_description} {return_type}", "Example TestScript to test {profile_description} resource read and profile validation using {return_type} format")
* insert TSOrigin(1)
* insert TSDestination(1)
* insert TSProfile({profile_id}, {profile_url})
* insert TSTest(PatientReadValidate, "Test {profile_description} resource read on destination server and assert returned resource passes validation")
* insert TSTestOperationResource(#read, #{resource}, {return_type}, 1, 1, "ResourceRead", "/{resource_id}")
* insert TSTestAssertWithProp("Confirm that the returned response code is 200 OK.", false, #response, responseCode, "200")
* insert TSTestAssertWithProp("Confirm that the returned response payload is the specified resource.", false, #response, resource, #{resource})
* insert TSTestAssertWithProp("Confirm that the returned resource conforms to the specified profile.", false, #response, validateProfileId, "{profile_id}")
